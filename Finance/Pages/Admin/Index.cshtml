@page
@model IndexModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Admin";
}
<div class="trafic-overview">
    <div class="chart-area" >
        <canvas id="myChart"></canvas>
    </div>
</div>

<div class="bot-overview">
    <div class="bot-table">
        <div class="left-table-header">
            <div class="header-left">
                <div class="bot-table-title">
                    Feedbacks
                </div>
                <span class="bot-table-sub-title">
                    Group: 
                    <span  style="color: #4B506D">Support</span>
                </span>
            </div>
            <a class="header-right right-side-style-1" href="/admin/feedback">
                See more
            </a>
        </div>
        <div class="bot-table-row">
            <div class="left-side left-side-style-1">
                #Unseen feedbacks
            </div>
            <div class="right-side right-side-style-1">
                3
            </div>
        </div>
        
        @foreach (var f in Model.Feedback)
        {
        <div class="bot-table-row">
            <div class="left-side left-side-style-2">
                @f
            </div>
        </div>
        }
        
    </div>
    <div class="bot-table">
        <div class="left-table-header">
            <div class="header-left">
                <div class="bot-table-title">
                    Summary
                </div>
                <span class="bot-table-sub-title">
                    Last update: @DateTime.Now
                </span>
            </div>
            <a class="header-right right-side-style-1" href="#">
                            
            </a>
        </div>
        <div class="bot-table-row">
            <div class="left-side left-side-style-1">
                Total users
            </div>
            <div class="right-side right-side-style-1">
                @Model.Metric.CntUser
            </div>
        </div>
        <div class="bot-table-row">
            <div class="left-side left-side-style-1">
                Total Category
            </div>
            <div class="right-side right-side-style-2">
                @Model.Metric.CntCate
            </div>
        </div>
        <div class="bot-table-row">
            <div class="left-side left-side-style-1">
                Total Transactions
            </div>
            <div class="right-side right-side-style-2">
                @Model.Metric.CntTran
            </div>
        </div>
        <div class="bot-table-row row-style-2">
            <div class="left-side left-side-style-1">
                Total feedbacks
            </div>
            <div class="right-side right-side-style-2">
                @Model.Metric.CntFeed
            </div>
        </div>
    </div>
</div>
               


@section Scripts {
    <script>

        const labels = [];
    //const datapoints_yesterday = [0, 20, 20, 60, 60, 120, 140, 180, 120, 125, 105, 110, 170];
    //const datapoints_today = [0, 15, 20, 70, 50, 100, 120, 130, 140, 155, 105, 70, 30];

    const data = {
        labels: labels,
        datasets: [
            {
                label: 'Today',
                data: [],
                borderColor: '#3751FF',
                fill: false,
                tension: 0.4,
                pointStyle: 'line'

            },
            {
                label: 'Yesterday',
                data: [],
                borderColor: '#DFE0EB',
                fill: true,
                backgroundColor: '#DFE0EB44',
                tension: 0.4,
                pointStyle: 'line',

            }
        ]
    };

    let config = {
        type: 'line',
        data: data,
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: "Today's Trafic",
                    color: "#252733",
                    font: {
                        size: 19,
                        family: 'Mulish',
                        weight: 'bold'
                    },
                    padding: {
                        bottom: 10
                    },
                    align: 'start'
                },
                subtitle: {
                    display: true,
                    text: 'as of 19 Jan 2022, 00:00 AM',
                    color: '#9FA2B4',
                    font: {
                        size: 12,
                        family: 'Poppin',
                        weight: 'normal'
                    },
                    padding: {
                        bottom: 10
                    },
                    align: 'start'
                },
                legend: {
                    labels: {
                        usePointStyle: true,
                        color: '#9FA2B4',
                        font: {
                            size: 12,
                            family: 'Poppin',
                            weight: 'SemiBold'
                        }
                    },
                    align: 'end',
                }
            },
            interaction: {
                intersect: false,
            },
            scales: {
                x: {
                    display: true,
                    title: {
                        display: true
                    },
                    grid: {
                        display: false
                    }
                },
                y: {
                    display: true,
                    title: {
                        display: true
                    },
                    suggestedMin: 0,
                    suggestedMax: 1
                }
            }
        },
    };

    let suggestedMax = 1

    function addData(chart, label, today, yesterday) {
        chart.data.labels.push(label)
        chart.data.datasets[0].data.push(yesterday)
        chart.data.datasets[1].data.push(today)
        if (suggestedMax < today) suggestedMax = today
        if (suggestedMax < yesterday) suggestedMax = yesterday

        chart.config.options.scales.y.suggestedMax = suggestedMax * 5 / 3;
        chart.update();
    }


        window.show_chart = (today_data, yesterday_data, date) => {
        config.options.plugins.subtitle.text = date
        console.log(date)
        const myChart = new Chart(
            document.getElementById('myChart'),
            config
        );

        myChart.data.labels = []
        myChart.data.datasets[0].data = []
        myChart.data.datasets[1].data = []

        for (let i = 0; i < 12; ++i)
            setTimeout(() => {
                addData(myChart, (i*2+2).toString().padStart(2, 0), today_data[i], yesterday_data[i])
            }, 200*i)


        myChart.options.plugins.title.align = 'start';
        myChart.update();


    }

    

    async function updateChartFronAPI() {
        //api/chart/wallet/pie/email/type
        resp = await fetch("/api/chart/admin/chart")
        const txt = await resp.text()
        const json = JSON.parse(txt)
        show_chart(json.map(e => e.yesterdayCnt), json.map(e => e.todayCnt), '@DateTime.Now')
    }
    updateChartFronAPI()
    </script>
}